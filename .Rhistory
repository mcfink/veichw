library(readr)
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4))))
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4)))
htmlCode
x <- read_fwf(https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for)
x <- read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
x <- read_fwf(con)
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
## functions
)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
close()
close(con)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
library(readr)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con
x
htmlCode <- readLines(con)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
head(htmlCode)
write.table(htmlCode, file = "texty.txt")
x <- read_fwf("texty.txt"), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
head(x)
sum(x$X4)
summary(x$X4)
sum(as.numeric(x$X4))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(13, 7,4,9,4,9,4,9,4)))
sum(as.numeric(x$X4))
head(x)
summary(x)
summary(as.numeric(x$X4))
x$X4
x <- read_fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
x <- read.fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
head(x)
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 7,4,9,4,9,4,9,4))
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 9,4,9,4,9,4,9,4))
head(x, 50)
colSums(as.numeric(x$V4))
sum(as.numeric(x$V4))
length(x)
length(x$V1)
1255* 25
x <- read.fwf("texty.txt", skip=12, widths = c(16, 9,4,9,4,9,4,9,4))
sum(as.numeric(x$V4))
head(x, 20)
tail(x, 20)
install.packages('maps')
library(maps)
map('state.carto', fill = TRUE, col = palette())
data(stateMapEnv)
data(state.vbm.center)
map('usa')
install.packages(gpclib)
install.packages('gpclib')
install.packages('maptools')
library(RColorBrewer)
library(classInt)
install.packages('classInt')
library(gpclib)
library(maptools)
gpclibPermit()
library(classInt)
a <-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv" )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", a.csv )
?download.file
getwd()
a <- read.csv("getdata-data-ss06hid.csv")
head(a)
library(dplyr)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
head(vec)
b <- a[vec]
b <-tbl_df(a)
c <- filter(b, ACR == 3)
d <- filter(c, AGS == 6)
head(d)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
a[which(vec)]
which(vec)
head(vec)
head(vec, 19)
head(vec, 300)
which(vec)
vec <- ifelse(a$ACR ==3, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
which(vec)
library(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("test.jpg")
readJPEG("test.jpg", native=TRUE)
a <-readJPEG("test.jpg", native=TRUE)
quantile(a, c(.3, .8))
a <- read.csv('edstats.csv')
b <- read.csv('GDP.csv')
?merge
?join
head(b)
head(b$X.1)
head(b$X.1, 30)
head(b$X, 30)
head(a$X, 30)
head(a, 30)
c <- merge(a, b, by.x="X", by.y = "CountryCode")
c <- merge(a, b, by.x=X, by.y = "CountryCode")
c <- merge(a, b, by.x=a$X, by.y = "CountryCode")
c <- merge(a, b, by.y = "CountryCode")
c <- merge(a, b, by.y = b$X)
?merge
c <- merge(a,b)
head(c, 30)
head(c, 3)
head(a$Short.Name)
head(a$CountryCode)
head(b$X)
merge(a, b, by.a = "CountryCode", by.b = "X")
c <- merge(a, b, by.a = "CountryCode", by.b = "X")
head(c,2)
d <- sort(c$Gross.domestic.product.2012)
head(d$Gross.domestic.product.2012)
head(d, 15)
head(c,5)
length(d)
length(a)
length(b)
length(a$CountryCode)
length(b$X)
c <- merge(a, b, by.x = "CountryCode", by.y = "X")
d <- sort(c$Gross.domestic.product.2012)
head(d, 15)
head(d$GDP)
combined <- merge(a,b, by.x = "CountryCode", by.y = "X")
head(combined)
combined$GDP <- as.numeric(as.character(combined$Gross.domestic.product.2012))
combined$Short.Name <- as.character(combined$Short.Name)
head(combined, 13)
head(combined[order(combined$GDP, decreasing = TRUE)])
head(combined[order(combined$GDP, decreasing = TRUE),])
head(combined[order(combined$GDP, decreasing = TRUE),], 13)
?cut
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, man)
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, mean)
f
g <- cut(combined, breaks=5)
g <- cut(combined$GDP, breaks=5)
?table
table(g$GDP, g$Income.Group)
g <- data.frame(combined$Short.Name, combined$GDP, combined$Income.Group)
head(g)
g$quant <- cut(g$combined.GDP, breaks=5)
table(g$quant, g$combined.GDP)
table(g$quant, g$combined.Income.Group)
?maps
library(maps)
library(maptools)
?maps
setwd("~/Desktop/VEIC-II")
## load necessary libraries
library(xlsx)
library(lubridate)
raw_pressure_temperature <- read.xlsx("EnergyDataAnalaysisHomeworData9-2015.xlsx", 1, startRow = 4)
raw_pressure_temperature <- read.xlsx("EnergyDataAnalaysisHomeworkData9-2015.xlsx", 1, startRow = 4)
raw_load_power <- read.xlsx("EnergyDataAnalaysisHomeworkData9-2015.xlsx", 2)
raw_pressure_temperature <- read.xlsx2("EnergyDataAnalaysisHomeworkData9-2015.xlsx", 1, startRow = 4)
raw_load_power <- read.xlsx2("EnergyDataAnalaysisHomeworkData9-2015.xlsx", 2)
raw_exp_period <- read.xlsx2("EnergyDataAnalaysisHomeworkData9-2015.xlsx", 3, startRow = 6)
raw_pressure_temperature <- read.csv("raw_pressure_temperature")
raw_pressure_temperature <- read.csv("raw_pressure_temperature.csv")
ls()
dir()
raw_pressure_temperature <- read.csv("baseline-pressure-temp.csv")
summary(raw_pressure_temperature)
?read.csv
raw_pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3)
head(raw_pressure_temperature)
raw_load_power <- read.csv("baseline-load-power.csv")
head(raw_load_power)
library(dplyr)
mutate(raw_load_power, cop = Load..tons. / Refr.compressor.power..kW. )
raw_exp_period <- read.csv("efficiency.csv", skip = 5)
head(raw_exp_period)
library(ggplot2)
raw_pressure_temperature[1,1]
str(raw_exp_period)
?mdy
raw_pressure_temperature$date  <- mdy(raw_pressure_temperature$Date...Time)
raw_pressure_temperature$date  <- mdy_hm(raw_pressure_temperature$Date...Time)
head(raw_pressure_temperature)
month(raw_pressure_temperature$date[1])
month(raw_pressure_temperature$date[399])
month(raw_pressure_temperature$date[3999])
month(raw_pressure_temperature$date[10000])
pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3)
load_power <- read.csv("baseline-load-power.csv")
exp_period <- read.csv("efficiency.csv", skip = 5)
pressure_temperature$date <- mdy_hm(pressure_temperature$Date...Time)
pressure_temperature$date <- mdy_hm(pressure_temperature$Date...Time)
load_power$date <- mdy_hm(load_power$Date...Time)
exp_period$date <- mdy_hm(exp_period$Date...Time)
str(load_power)
str(pressure_temperature)
?merge
control_series <- merge(pressure_temperature, load_power, by.x = date, by.y = date)
control_series <- merge(pressure_temperature, load_power)
head(control_series)
str(conditionCall)
str(control_series)
control_series <- merge(pressure_temperature, load_power, by="date")
str(control_series)
control_series$load.kW <- control_series$Load..tons. * 3.51685
control_series$COP <- control_series$load.kW / control_series$Refr.compressor.power..kW.
describe(control_series$load.kW)
?describe
summary(control_series$load.kW)
table(control_series$load.kW)
summary(control_series$Discharge.pressure..psig.)
?read.csv
pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3, colClasses = c("Date", "numeric", "numeric", "numeric"))
pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3, colClasses = c("Date", "numeric", "numeric", "numeric"), na.strings = "N/A")
pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3,
colClasses = c("Date", "numeric", "numeric", "numeric"),
na.strings = "#N/A")
pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3,
colClasses = c("Date", "numeric", "numeric", "numeric"),
na.strings = c("#N/A", "<NoData>"))
pressure_temperature <- read.csv("baseline-pressure-temp.csv", skip = 3,
colClasses = c("character", "numeric", "numeric", "numeric"),
na.strings = c("#N/A", "<NoData>"))
load_power <- read.csv("baseline-load-power.csv")
exp_period <- read.csv("efficiency.csv", skip = 5)
## add a usable date column to each dataset
pressure_temperature$date <- mdy_hm(pressure_temperature$Date...Time)
load_power$date <- mdy_hm(load_power$Date...Time)
exp_period$date <- mdy_hm(exp_period$Date...Time)
## merge the pressure/temp dataset with the load power dataset
control_series <- merge(pressure_temperature, load_power, by="date")
## adding columns to control series:
## add a column with load in kW instead of tons so the coefficient of performance will be unitless
control_series$load.kW <- control_series$Load..tons. * 3.51685
## add a coefficient of performance
control_series$COP <- control_series$load.kW / control_series$Refr.compressor.power..kW.
head(control_series)
tail(control_series)
load_power <- read.csv("baseline-load-power.csv",
colClasses = c("character", "numeric", "numeric", "numeric"))
pressure_temperature$date <- mdy_hm(pressure_temperature$Date...Time)
load_power$date <- mdy_hm(load_power$Date...Time)
exp_period$date <- mdy_hm(exp_period$Date...Time)
## merge the pressure/temp dataset with the load power dataset
control_series <- merge(pressure_temperature, load_power, by="date")
## adding columns to control series:
## add a column with load in kW instead of tons so the coefficient of performance will be unitless
control_series$load.kW <- control_series$Load..tons. * 3.51685
## add a coefficient of performance
control_series$COP <- control_series$load.kW / control_series$Refr.compressor.power..kW.
tail(control_series)
?sd
sd(control_series$Discharge.pressure..psig.)
summary(control_series$Discharge.pressure..psig.)
sd(control_series$Discharge.pressure..psig., na.rm=TRUE)
one_sd <- sd(control_series$Discharge.pressure..psig., na.rm=TRUE)
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.))
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) + geom_point()
control_series$month <- month(control_series$date)
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) + geom_point(aes(alpha=.4))
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) + geom_point(aes(alpha=.2))
?cut
control_series$highP <- cut(control_series$Discharge.pressure..psig., P_mean + P_one_sd, labels = c("normal", "high"))
P_mean <- mean(control_series$Discharge.pressure..psig., na.rm=TRUE)
## flag points above 1 SD of discharge pressure
control_series$highP <- cut(control_series$Discharge.pressure..psig., P_mean + P_one_sd, labels = c("normal", "high"))
P_one_sd <- sd(control_series$Discharge.pressure..psig., na.rm=TRUE)
P_mean <- mean(control_series$Discharge.pressure..psig., na.rm=TRUE)
## flag points above 1 SD of discharge pressure
control_series$highP <- cut(control_series$Discharge.pressure..psig., P_mean + P_one_sd, labels = c("normal", "high"))
control_series$highP <- cut(control_series$Discharge.pressure..psig., P_mean + P_one_sd,
labels = c("normal", "high"),
include.lowest = TRUE)
control_series$highP <- cut(control_series$Discharge.pressure..psig.,
breaks = c(P_mean + P_one_sd),
labels = c("normal", "high"),
include.lowest = TRUE)
control_series$highP <- cut(control_series$Discharge.pressure..psig.,
breaks = c(0, P_mean + P_one_sd),
labels = c("normal", "high"),
include.lowest = TRUE)
control_series$highP <- cut(control_series$Discharge.pressure..psig.,
breaks = c(0, P_mean + P_one_sd),
labels = c("normal", "high"),
include.lowest = FALSE)
control_series$highP <- cut(control_series$Discharge.pressure..psig.,
breaks = c(0, P_mean + P_one_sd),
labels = c("normal", "high"),
right = TRUE)
control_series$highP <- cut(control_series$Discharge.pressure..psig.,
breaks = c(0, P_mean + P_one_sd, 500),
labels = c("normal", "high"),
right = TRUE)
control_series$highP <- cut(control_series$Discharge.pressure..psig.,
breaks = c(0, P_mean + P_one_sd, 500),
labels = c("normal", "high"))
table(control_series$highP)
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) +
geom_point(aes(alpha=.2, color=highP))
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) +
geom_point(aes(alpha=.2, color=highP), na.rm = TRUE)
ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) +
geom_point(aes(alpha=.12, color=highP), na.rm = TRUE)
g <- ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) +
geom_point(aes(alpha=.12, color=highP), na.rm = TRUE)
g + facet_wrap( ~ month)
g <- ggplot(control_series, aes(x=Twb..F., y=Discharge.pressure..psig.)) +
geom_point(aes(alpha=.12, color=highP), na.rm = TRUE) +
coord_cartesian(xlim = c(-10, 80), ylim = c(70,180))
g + facet_wrap( ~ month)
library(dplyr)
P_by_month <- group_by(control_series, month)
P_summary <- summarize(P_by_month, count=n())
P_summary
P_by_month <- group_by(control_series, month)
P_summary <- summarize(P_by_month, count=table(highP))
?n
P_by_month <- group_by(control_series, month, highP) %.%
summarize(fraction = n())
P_by_month <- group_by(control_series, month, highP) %>%
summarize(fraction = n())
P_by_month
?count
P_by_month <- group_by(control_series, month, highP) %>%
summarize(n = n())
P_by_month
P_by_month <- group_by(control_series, month, highP) %>%
summarize(n = n()) %>%
mutate(freq = n / sum(n))
P_by_month
print(P_by_month)
View(P_by_month)
high_P_by_month <- filter(P_by_month, highP == "high")
ggplot(high_P_by_month, aes(x=month, y=freq)) + geom_bar(stat="identity")
P_by_month <- group_by(control_series, month, highP) %>%
summarize(n = n()) %>%
mutate(fraction = n / sum(n))
high_P_by_month <- filter(P_by_month, highP == "high")
ggplot(high_P_by_month, aes(x=month, y=fraction)) + geom_bar(stat="identity")
ggplot(high_P_by_month, aes(x=factor(month), y=fraction)) + geom_bar(stat="identity")
ggplot(high_P_by_month, aes(x=factor(month), y=fraction)) +
geom_bar(stat="identity") +
geom_text(aes(label=fraction), vjust=1.5)
?round
ggplot(high_P_by_month, aes(x=factor(month), y=fraction)) +
geom_bar(stat="identity") +
geom_text(aes(label=round(fraction, digits=2)), vjust=1.5)
ggplot(high_P_by_month, aes(x=factor(month), y=fraction)) +
geom_bar(stat="identity") +
geom_text(aes(label=round(fraction, digits=2), color = "white"), vjust=1.5)
ggplot(high_P_by_month, aes(x=factor(month), y=fraction)) +
geom_bar(stat="identity") +
geom_text(aes(color="white", label=round(fraction, digits=2)), vjust=1.5)
h <- ggplot(control_series, aes(x=COP, y=Twb..F.)) +
geom_point()
h + facet_wrap( ~ month)
h <- ggplot(control_series, aes(x=COP, y=Twb..F.)) +
geom_point(na.rm = TRUE)
h + facet_wrap( ~ month)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(na.rm = TRUE)
h + facet_wrap( ~ month)
max(control_series$load.kW)
control_series$load_category <- cut(control_series$load.kW,
breaks = c(0, 1, 200, 1200, 2200),
labels = c("No Load", "Low", "Medium", "High"))
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(na.rm = TRUE)
h + facet_wrap( ~ load_category)
control_series$load_category <- cut(control_series$load.kW,
breaks = c(0, 1, 200, 800, 1200, 2200),
labels = c("No Load", "Very Low", "Low", "Medium", "High"))
## remove the "no load" category
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(na.rm = TRUE)
h + facet_wrap( ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(na.rm = TRUE)
h + facet_grid(month ~ load_category)
?cut
control_series$load_category <- cut(control_series$load.kW,
breaks = c(-1, 1, 200, 800, 1200, 2200),
labels = c("No Load", "Very Low", "Low", "Medium", "High"))
## remove the "no load" category
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(na.rm = TRUE)
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color=Twb..F.), na.rm = TRUE)
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color=Twb..F.), na.rm = TRUE)
h + facet_grid(month ~ load_category) + scale_fill_brewer(palette = "Spectral")
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12), na.rm = TRUE) +
+ scale_fill_brewer(palette = "Spectral")
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12), na.rm = TRUE) +
scale_fill_brewer(palette = "Spectral")
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12), na.rm = TRUE) +
scale_color_brewer(palette = "Spectral")
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_brewer(palette = "Spectral")
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
discrete_color_brewer(palette = "Spectral")
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE)
h + facet_grid(month ~ load_category)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE)
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.2
)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE)
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.1)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_brewer(palette = "Spectral")
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.1)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE)
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.1)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) + scale_color_gradient(low="blue")
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.1)
h <- ggplot(control_series, aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) + scale_color_gradient(low="blue", high="red")
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.1)
h <- ggplot(filter(control_series, load_category != "No Load"), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) + scale_color_gradient(low="blue", high="red")
h + facet_grid(month ~ load_category) + geom_rug(position="jitter", size = 0.1)
i <- ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(low="blue", high="red")
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(low="blue", high="red")
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(low="blue", high="red") +
coord_cartesian(xlim = c(48, 85))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(low="blue", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient2(limits=c(50,77),low="blue", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient2(limits=c(50,77)) +
coord_cartesian(xlim = c(48, 80))
source('~/Desktop/VEIC-II/raw-script.R', echo=TRUE)
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient2(low="blue", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient2(high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient2(low="black", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(low="black", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(range=c(50, 77),low="black", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(limits=c(50, 77),low="black", high="red") +
coord_cartesian(xlim = c(48, 80))
ggplot(filter(control_series, load_category == "High", month == 7), aes(x=Twb..F., y=COP)) +
geom_point(aes(alpha = .12, color = Twb..F.), na.rm = TRUE) +
scale_color_gradient(limits=c(50, 77),low="blue", high="red") +
coord_cartesian(xlim = c(48, 80))
